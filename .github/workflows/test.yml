name: Test

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ["3.10.3-ubuntu-focal", "3.10.4-fedora-38", "3.10.7.0-ubuntu-jammy"]
    container:
      image: igorfreire/gnuradio-oot-dev:${{ matrix.container }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install dependencies
        if: ${{ contains(matrix.container, 'ubuntu') }}
        run: apt update && apt install -y libsndfile1-dev
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Test
        run: cd ${{github.workspace}}/build && ctest -C ${{env.BUILD_TYPE}} -VV
  arm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ["3.10.7.0-ubuntu-jammy"]
        platform: ["linux/arm64", "linux/arm/v7"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,arm
      - name: Build and test inside Docker container
        uses: addnab/docker-run-action@v3
        with:
          image: igorfreire/gnuradio-oot-dev:${{ matrix.container }}
          options: |
            --platform ${{ matrix.platform }}
            --volume ${{ github.workspace }}:/build
            --workdir /build
          run: |
            apt update && apt install -y libsndfile1-dev
            cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
            cd ${{github.workspace}}/build && ctest -C ${{env.BUILD_TYPE}} -VV
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install dependencies
        run: brew install gnuradio pybind11 doxygen scipy six
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Test
        run: cd ${{github.workspace}}/build && ctest -C ${{env.BUILD_TYPE}} -VV
