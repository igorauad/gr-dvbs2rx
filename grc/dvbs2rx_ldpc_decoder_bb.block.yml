id: dvbs2rx_ldpc_decoder_bb
label: LDPC Decoder
category: "[Core]/Digital Television/DVB"
flags: [python, cpp]

parameters:
  - id: standard
    label: Standard
    dtype: raw
  - id: framesize
    label: FECFRAME size
    dtype: raw
  - id: rate
    label: Code rate
    dtype: raw
  - id: constellation
    label: Constellation
    dtype: raw
  - id: outputmode
    label: Output mode
    dtype: enum
    options: [OM_CODEWORD, OM_MESSAGE]
    option_labels: [Codeword, Message]
  - id: infomode
    label: Show Corrected SNR
    dtype: enum
    options: [INFO_OFF, INFO_ON]
    option_labels: ["Off", "On"]
  - id: max_trials
    label: Max Iterations
    dtype: int
    default: 25
  - id: debug_level
    label: Debug Level
    dtype: int
    default: 0

inputs:
  - domain: stream
    dtype: byte

outputs:
  - domain: stream
    dtype: byte
  - domain: message
    id: llr_pdu
    optional: true

templates:
  imports: from gnuradio import dvbs2rx
  make: |-
    dvbs2rx.ldpc_decoder_bb(${standard}, ${framesize}, ${rate}, ${constellation},
                            dvbs2rx.${outputmode}, dvbs2rx.${infomode}, ${max_trials}, ${debug_level})

cpp_templates:
  includes: ["#include <gnuradio/dvbs2rx/ldpc_decoder_bb.h>"]
  declarations: "dvbs2rx::ldpc_decoder_bb::sptr ${id};"
  make: |-
    this->${id} = dvbs2rx::ldpc_decoder_bb::make(${standard}, ${framesize}, ${rate}, ${constellation},
                                                 dvbs2rx::${outputmode}, dvbs2rx::${infomode}, ${max_trials}, ${debug_level});
  link: ["gnuradio::gnuradio-dvbs2rx"]

file_format: 1
